AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for Globus Connect Server with S3 Connector"

Conditions:
  HasSubscription: !Not [!Equals [!Ref GlobusSubscriptionId, ""]]
  IsProduction: !Equals [!Ref DeploymentType, "Production"]
  UseElasticIP: !Or [!Equals [!Ref DeploymentType, "Production"], !Equals [!Ref ForceElasticIP, "true"]]
  HasS3BucketName: !Not [!Equals [!Ref S3BucketName, ""]]
  DeployS3Connector: !And [!Equals [!Ref EnableS3Connector, "true"], !Condition HasSubscription, !Condition HasS3BucketName]
  HasDefaultAdmin: !Not [!Equals [!Ref DefaultAdminIdentity, ""]]

Parameters:
  ScriptUrl:
    Description: URL to the Globus installation script (e.g., GitHub raw URL)
    Type: String
    Default: "https://raw.githubusercontent.com/scttfrdmn/globus-gcs-s3-deployment/main/scripts/globus-setup.sh"
    
  DeploymentType:
    Description: Type of deployment (affects resource configuration)
    Type: String
    Default: Integration
    AllowedValues:
      - Integration
      - Production
    ConstraintDescription: Must be either Integration or Production.
    
  ForceElasticIP:
    Description: Force allocation of Elastic IP even for Integration deployment
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    
  # AuthenticationMethod has been removed to simplify and use Globus Auth only
  # This reduces complexity and focuses on the most modern approach
    
  DefaultAdminIdentity:
    Description: Globus identity to be granted admin access (email@example.org)
    Type: String
    Default: ""

  InstanceType:
    Description: EC2 instance type for Globus Connect Server
    Type: String
    Default: m6i.xlarge
    AllowedValues:
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m6i.xlarge
      - m6i.2xlarge
      - m6i.4xlarge
      - m6in.xlarge
      - m6in.2xlarge
      - m6in.4xlarge
    ConstraintDescription: Must be a valid EC2 instance type.

  KeyName:
    Description: Name of an existing AWS EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair in your AWS account.

  AvailabilityZone:
    Description: The Availability Zone to launch the instance in
    Type: AWS::EC2::AvailabilityZone::Name

  VpcId:
    Description: VPC to deploy Globus Connect Server into
    Type: AWS::EC2::VPC::Id

  SubnetId:
    Description: Subnet within the selected VPC and Availability Zone
    Type: AWS::EC2::Subnet::Id

  GlobusClientId:
    Description: Globus Client ID for registration
    Type: String
    NoEcho: true

  GlobusClientSecret:
    Description: Globus Client Secret for registration
    Type: String
    NoEcho: true

  GlobusSubscriptionId:
    Description: Globus Subscription ID to join this endpoint to your subscription (REQUIRED for S3 connector)
    Type: String
    
  # Connector options (always enabled in this template)
  EnableS3Connector:
    Description: Whether to enable S3 Connector (defaults to true for this template)
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    
  # Connector specific parameters
  S3BucketName:
    Description: Name of S3 bucket to connect (required when EnableS3Connector is true)
    Type: String
    AllowedPattern: "[a-zA-Z0-9\\-\\.]{3,63}"
    ConstraintDescription: Bucket name must be between 3 and 63 characters, contain only letters, numbers, hyphens, and periods.
    
  GlobusDisplayName:
    Description: Display name for the Globus endpoint (REQUIRED - must be unique)
    Type: String
    AllowedPattern: "[A-Za-z0-9\\-_\\.\\s]+"
    ConstraintDescription: "Display name can include letters, numbers, spaces, hyphens, underscores, and periods."
    
  GlobusOrganization:
    Description: Organization name for the Globus endpoint (can include spaces)
    Type: String
    Default: "AWS"
    AllowedPattern: "[A-Za-z0-9\\-_\\.\\s]+"
    ConstraintDescription: "Organization name can include letters, numbers, spaces, hyphens, underscores, and periods."
    
  GlobusOwner:
    Description: Identity username of the endpoint owner (e.g. user@example.edu)
    Type: String
    Default: ""
    
  GlobusContactEmail:
    Description: Email address for the support contact for this endpoint (visible to users)
    Type: String
    Default: "admin@example.com"
    
  GlobusProjectId:
    Description: Globus Auth project ID where this endpoint will be registered (REQUIRED for service identity authentication)
    Type: String
    
  GlobusProjectName:
    Description: (Optional) Name of the Auth project for the new endpoint client 
    Type: String
    Default: ""
    
  GlobusProjectAdmin:
    Description: (Optional) Globus username of the admin of the Auth project
    Type: String
    Default: ""
    
  GlobusAlwaysCreateProject:
    Description: Create a new auth project for this endpoint even if you already have one
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
      
  ResetEndpointOwner:
    Description: Reset the endpoint's advertised owner after setup for better visibility (runs automatically after deployment)
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
      
  EndpointResetOwnerTarget:
    Description: Which identity to set as the advertised owner (if ResetEndpointOwner is true)
    Type: String
    Default: "GlobusOwner"
    AllowedValues:
      - "GlobusOwner"
      - "DefaultAdminIdentity"
      - "GlobusContactEmail"

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-01896de842c443b1b # Ubuntu 22.04 LTS AMI in us-east-1
    us-east-2:
      AMI: ami-0e83be366243f524a # Ubuntu 22.04 LTS AMI in us-east-2
    us-west-1:
      AMI: ami-0487b1fe60c1fd1a2 # Ubuntu 22.04 LTS AMI in us-west-1
    us-west-2:
      AMI: ami-03f65b8614a860c29 # Ubuntu 22.04 LTS AMI in us-west-2
    eu-west-1:
      AMI: ami-0ec7f9846a9d38ac7 # Ubuntu 22.04 LTS AMI in eu-west-1
    eu-central-1:
      AMI: ami-0caef02b518350c8f # Ubuntu 22.04 LTS AMI in eu-central-1
    ap-northeast-1:
      AMI: ami-03a2bb16327aeaa38 # Ubuntu 22.04 LTS AMI in ap-northeast-1
    ap-southeast-1:
      AMI: ami-078c2ea6f5c9de06a # Ubuntu 22.04 LTS AMI in ap-southeast-1
    ap-southeast-2:
      AMI: ami-0d0af5dfe4b9ecf54 # Ubuntu 22.04 LTS AMI in ap-southeast-2

Resources:
  GlobusServerElasticIP:
    Type: AWS::EC2::EIP
    Condition: UseElasticIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: globus-server-eip
          
  GlobusServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and Globus Connect Server ports
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: SSH access
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS for Globus Connect Server
        - IpProtocol: tcp
          FromPort: 2811
          ToPort: 2811
          CidrIp: 0.0.0.0/0
          Description: GridFTP control channel
        - IpProtocol: tcp
          FromPort: 7512
          ToPort: 7512
          CidrIp: 0.0.0.0/0
          Description: Globus Connect Server authentication
        - IpProtocol: tcp
          FromPort: 50000
          ToPort: 51000
          CidrIp: 0.0.0.0/0
          Description: GridFTP data channels
      Tags:
        - Key: Name
          Value: globus-server-sg

  GlobusServerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: "/"

  GlobusServerS3Policy:
    Type: AWS::IAM::Policy
    Condition: DeployS3Connector
    Properties:
      PolicyName: GlobusServerS3Access
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucketLocation
            Resource: !Sub "arn:aws:s3:::${S3BucketName}"
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
              - s3:ListMultipartUploadParts
              - s3:AbortMultipartUpload
            Resource: !Sub "arn:aws:s3:::${S3BucketName}/*"
          - Effect: Allow
            Action:
              - ec2:CreateTags
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
      Roles:
        - !Ref GlobusServerRole

  GlobusServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref GlobusServerRole

  GlobusServerInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT30M
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      AvailabilityZone: !Ref AvailabilityZone
      IamInstanceProfile: !Ref GlobusServerInstanceProfile
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      NetworkInterfaces:
        - AssociatePublicIpAddress: !If [UseElasticIP, false, true]
          DeviceIndex: "0"
          GroupSet:
            - !GetAtt GlobusServerSecurityGroup.GroupId
          SubnetId: !Ref SubnetId
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 100
            VolumeType: gp3
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Bootstrap script to download and run the Globus installation script from S3
          
          # Ensure we log errors and output
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          
          echo "=== GLOBUS-CONNECT-SERVER-BOOTSTRAP ==="
          
          # Install AWS CLI if not present
          apt-get update && apt-get install -y python3-pip curl
          pip3 install --upgrade awscli
          
          # Install AWS CloudFormation helpers
          pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          mkdir -p /opt/aws/bin && ln -sf /usr/local/bin/cfn-* /opt/aws/bin/
          
          # Environment variables for the script - use proper quoting for multi-word parameters
          export AWS_REGION="${AWS::Region}"
          export AWS_STACK_NAME="${AWS::StackName}"
          export GLOBUS_CLIENT_ID="${GlobusClientId}"
          export GLOBUS_CLIENT_SECRET="${GlobusClientSecret}"
          # Use proper escaping and quoting for multi-word values
          export GLOBUS_DISPLAY_NAME='${GlobusDisplayName}'
          export GLOBUS_ORGANIZATION='${GlobusOrganization}'
          export GLOBUS_OWNER="${GlobusOwner}"
          export GLOBUS_CONTACT_EMAIL="${GlobusContactEmail}"
          export GLOBUS_PROJECT_ID="${GlobusProjectId}"
          export GLOBUS_PROJECT_NAME="${GlobusProjectName}"
          export GLOBUS_PROJECT_ADMIN="${GlobusProjectAdmin}"
          export GLOBUS_ALWAYS_CREATE_PROJECT="${GlobusAlwaysCreateProject}"
          export RESET_ENDPOINT_OWNER="${ResetEndpointOwner}"
          export ENDPOINT_RESET_OWNER_TARGET="${EndpointResetOwnerTarget}"
          export GLOBUS_SUBSCRIPTION_ID="${GlobusSubscriptionId}"
          export DEPLOYMENT_TYPE="${DeploymentType}"
          export AUTH_METHOD="Globus"
          export DEFAULT_ADMIN="${DefaultAdminIdentity}"
          export ENABLE_S3_CONNECTOR="${EnableS3Connector}"
          export S3_BUCKET_NAME="${S3BucketName}"
          # IMPORTANT: Environment variables for service authentication and debugging
          export DEBUG_SKIP_VERSION_CHECK="false" # Enable version compatibility check
          export DEBUG_SKIP_DUPLICATE_CHECK="false" # Allow duplicate endpoint check to run
          
          # Use service credential environment variables for automated deployment
          # See: https://docs.globus.org/globus-connect-server/v5/automated-deployment/
          export GCS_CLI_CLIENT_ID="${GlobusClientId}"
          export GCS_CLI_CLIENT_SECRET="${GlobusClientSecret}"
          
          # Download the installation script from GitHub
          echo "Downloading installation script from ${ScriptUrl}"
          curl -s -L -o /tmp/globus-setup.sh "${ScriptUrl}"
          
          # Make it executable
          chmod +x /tmp/globus-setup.sh
          
          # Run the installation script
          echo "Running installation script"
          bash /tmp/globus-setup.sh
          
          # Signal CloudFormation of completion
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource GlobusServerInstance --region ${AWS::Region}
          
          echo "=== GLOBUS-CONNECT-SERVER-BOOTSTRAP-COMPLETE ==="
      Tags:
        - Key: Name
          Value: globus-connect-server
          
  GlobusServerIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Condition: UseElasticIP
    Properties:
      AllocationId: !GetAtt GlobusServerElasticIP.AllocationId
      InstanceId: !Ref GlobusServerInstance

Outputs:
  InstanceId:
    Description: Instance ID of the Globus Connect Server
    Value: !Ref GlobusServerInstance

  PrivateIP:
    Description: Private IP address of the Globus Connect Server
    Value: !GetAtt GlobusServerInstance.PrivateIp

  ElasticIP:
    Description: Elastic IP address assigned to the Globus Connect Server
    Condition: UseElasticIP
    Value: !Ref GlobusServerElasticIP
    
  PublicDNS:
    Description: Public DNS name of the Globus Connect Server
    Value: !GetAtt GlobusServerInstance.PublicDnsName

  GlobusEndpointURL:
    Description: URL to access the Globus Endpoint
    Value: "https://app.globus.org/file-manager (Search for endpoint by name or UUID after registration)"
    
  SubscriptionStatus:
    Description: Globus Subscription Status
    Value: !If [HasSubscription, "Endpoint joined to subscription", "No subscription ID provided"]
    
  PublicAddress:
    Description: Public address to use for Globus redirect URI configuration
    Value: !If 
      - UseElasticIP
      - !Join ["", ["https://", !GetAtt GlobusServerElasticIP.PublicIp]]
      - !Sub "https://${GlobusServerInstance.PublicDnsName}"

  S3BucketConnected:
    Description: S3 Bucket connected to Globus
    Condition: DeployS3Connector
    Value: !Ref S3BucketName
    
  ConnectorsEnabled:
    Description: Connectors that were enabled for this deployment
    Value: !If 
      - DeployS3Connector
      - "S3 Connector"
      - "No connectors enabled (subscription required or S3 not enabled)"
    
  DeploymentConfiguration:
    Description: Deployment configuration information
    Value: !If 
      - UseElasticIP
      - !If [IsProduction, "Production deployment with Elastic IP", "Integration deployment with Elastic IP (forced)"]
      - "Integration deployment with dynamic public IP"
      
  AuthenticationConfiguration:
    Description: Authentication method configured for Globus
    Value: "Globus Auth (identity federation)"
      
  InitialAccessInfo:
    Description: Initial access configuration
    Value: !If 
      - HasDefaultAdmin
      - !Join ["", ["Admin access granted to ", !Ref DefaultAdminIdentity]]
      - "No default admin configured - access policies must be set manually"